INSERT INTO QnATable (Question, Answer)
VALUES
    ('Vad är en algoritm?', 'Är en uppsättning instruktioner som ska följas vid lösning av ett visst problem eller en beskrivning av scenarier som en mjukvara ska hantera med avseende på utveckling.'),
    ('Vad används en algoritm till?', 'Används för att identifiera den bästa möjliga lösningen för ett specifikt problem eller en samling problem baserat på faktorer som lagring, sortering och bearbetning inklusive komplexa beräkningar.'),
    ('Vad är en datastruktur?', 'Organisera och lagra data på en dator på ett specifikt sätt.'),
    ('Vad används en datastruktur till?', 'Används för att enkelt lagra, bearbeta och hämta data effektivt. Dessutom gör det processen med underhåll enklare.'),
    ('Vad är C#? T.ex är det ett interpreterat eller ett kompilerat språk?', 'C# liknande sina förfäder C och C++ är ett kompilerat programmeringsspråk.'),
    ('Vad används C# till? Ge ett par exempel på användningsområden.', 'C# kan användas för en bred programmeringsändamål såsom utveckling av mobilapplikationer, skrivbordsapplikationer, databashantering och processinteraktion, webbapplikationer och tjänster, spel och företagsprogramvara.'),
    ('Vilket/vilka verktyg använder vi främst för C#-utveckling', 'Microsoft levererar Visual Studio och Visual Studio Code kan användas som utvecklingsplattformar. Dock är det mest föredragna för C# Visual Studio som har olika licenser som gemenskap, företag och pro. Å andra sidan kan Visual Studio Code vara föredraget för andra språk som HTML och CSS.'),
    ('Vad används verktygen till?', 'Eftersom Visual Studio är en integrerad utvecklingsmiljö (IDE) som stöder en komplett utvecklingslivscykel på ett ställe kan den användas från att skriva, redigera, felsöka kod och dessutom distribuera den färdiga lösningen.'),
    ('Vad är versionshantering?', 'Är en process för att spåra och hantera ändringar i en mjukvarukod. Versionskontroll ger tillgång till historiska versioner av ditt projekt och möjliggör att flera personer samtidigt arbetar på ett enda projekt. Varje person redigerar sin egen kopia av filerna och väljer när han eller hon ska dela dessa ändringar med resten av teamet.'),
    ('Hur versionshanterar man kod?', 'Under utvecklingen kommer en kod skriven och redigerad av en utvecklare att commitas och pushas till en repository som är basen för den producerade koden. Varje ändring som görs på utvecklingen kommer att commitas till repositoriet så att alla ändringar kan spåras eller rullas tillbaka vid fel. Notera att en eller en grupp utvecklare kan arbeta tillsammans på samma projekt och samarbeta med hjälp av grenar, en teknik där alla kan bidra till utvecklingscykeln. Slutligen kommer alla grenar och arbeten att sammanfogas till en master-repo och distribueras. På så sätt kommer olika versioner med olika ändringar att finnas tillgängliga på fjärr-repo att användas vid behov.'),
    ('Vilka verktyg finns det för versionshantering av kod?', 'Git, GitLab, Azure DevOps Server, AWS CodeCommit, Helix Core och mer.'),
    ('Vad är syftet med versionshantering av kod?', 'Versionskontroll är fördelaktig när det gäller att hantera och skydda källkoden, hålla reda på modifieringar och ändringar, jämföra tidigare versioner av koden och stödja utvecklare för att upprätthålla arbetsflödet och effektiviteten.'),
    ('Vad är skillnaden mellan Git och Github?', 'Eftersom Git är ett versionshanteringssystem som tillåter utvecklare att spåra ändringar i sin kod, är GitHub som namnet antyder en HUB eller webbhot för repositorier.'),
    ('Ge minst ett exempel på ett C#-ramverk', 'Entity Framework, ASP .NET Core, ASP .NET Web API, ASP .NET MVC, C#-ramverk'),
    ('Vad används de/det ramverken du tagit upp till?', 'Entity Framework används som ett objektrelationellt kartläggningsramverk som ger utvecklare möjlighet att automatisera en process.'),
    ('Ge nåt exempel på när användandet av ramverk underlättar utvecklingen.', 'Åtkomst och lagring av data till och från en databas.'),
    ('Vad är skillnaden mellan .NET Core, .NET Framework samt Mono?', '.NET Core är öppen källkod och plattformsoberoende vilket innebär att det stöder Windows, Mac OS och Linux. .NET Framework är inte helt öppen källkod, men har vissa komponenter som är öppna källkod. .NET Framework gynnar Windows-plattformen. Mono är en öppen källkodversion av .NET Framework, skapad för att möjliggöra .NET-applikationer på en icke-Windows-plattform innan införandet av .NET Core, utvecklad av Xamarin som senare blev en del av Microsoft.'),
    ('Vilka är de tre senaste versionerna av .NET Core, .NET Framework samt Mono?', '.NET Core - 6.0, 7.0, 8.0, .NET Framework - 4.7.2, 4.8, 4.8.1, Mono - 4.6, 5.4, 6.4'),
    ('Vad är skillnaden mellan .NET Runtime och .NET SDK?', '.NET Runtime hanterar exekveringen av programmet och kan uteslutas från programmet. .NET SDK används för att skapa .NET-applikationer och bibliotek.'),
    ('Vad innebär realtid?', 'Realtid inom datavetenskap betyder att ett program genererar en respons inom en angiven tidsram, kallad "Deadlines", relativt till händelsen eller uppgiften. Realtid i datorer mäts ofta i millisekunder. Exempel - inloggningssystem.'),
    ('Vad innebär multitrådning?', 'Är en process att utföra flera uppgifter samtidigt snarare än sekventiellt. Detta sparar huvudsakligen tid och medför effektivitet.'),
    ('Varför vill man använda realtid/multitrådning?', 'Realtid är en nedgång att utföra en uppgift, vilket innebär att det finns en tidsbegränsning i bilden. För att förbättra svarstiden och uppfylla den önskade tidsfristen ökar flertrådning prestandan hos utförandet och underlättar färdigställandet av uppgiften före eller inom den förväntade tidsramen.'),
    ('Vad innebär asynkrona processer?', 'Asynkron är en teknik som gör att programmet fortfarande kan vara responsivt för andra förfrågningar medan det bearbetar en annan lång uppgift. Detta gör att programmet kan fungera effektivt istället för att vänta på färdigställandet av uppgiften pågår.'),
    ('För vilka användningsområden bör man använda asynkrona processer?', 'Det kan användas till exempel vid hämtning av data från databasen, webbåtkomst, arbete med bilder, arbete med filer.'),
    ('Vad betyder OOAD?', 'Objektorienterad analys och design (OOAD) är en metod där man kan designa en applikation genom att tillämpa objektorienterade koncept. Detta inkluderar visuell modellering. Det kan tillämpas under hela utvecklingscykeln för att säkerställa produktkvalitet och underlätta samverkan mellan intressenter.'),
    ('Vad innebär Objektorientering?', 'Objektorientering är en koncept för att organisera dataattribut och funktioner i en enhet som kallas objekt. Det är klassbaserat vilket innebär att attribut och funktioner används som en ritning för skapandet av objekt.'),
    ('Vad är fördelarna med Objektorientering?', 'Återanvändning av kod - arv tillåter att återanvända kod utan att skriva om den. Minskar fel. Ökar produktiviteten - skapandet av objekt från klasser under utvecklingen sparar tid. Förbättrar säkerheten - inkapsling och abstraktion hjälper till att dölja känslig data från exponering.'),
    ('Vad är nackdelarna med Objektorientering?', 'Introduktionen av nya begrepp inom OOP kan vara tidskrävande att förstå. Högre runtime-kostnad eftersom systemet bör avgöra vilken metod som ska utföras i förhållande till en begäran. Konsumerar mer minne på grund av skapandet av flera objekt som kräver minnesallokering. Exekveringseffektiviteten minskar på grund av ökad minneskonsumtion.'),
    ('Förklara kortfattat vad Abstraktion, Inheritance, Polymorphism och Encapsulation innebär.', 'Abstraktion - är en teknik för att separera gränssnittet för en klass från dess implementering. Arv - är en teknik där en barnklass kan ärva alla egenskaper och funktionaliteter från dess förälder/superklass. Polymorfism - är en teknik för att skapa objekt med ett delat beteende. En barnklass kan ha samma funktion som föräldern men en annan funktionalitet. Inkapsling - en teknik för att bilda en barriär kring data eller fält för att skydda den från resten av koden.'),
    ('Vad är ett programmeringsmönster?', 'Är ett mönster som används som en allmän lösning för vanliga problem i en programvarudesign. Det är med andra ord en mall som beskriver hur man löser ett problem i olika scenarier och senare kan omvandlas till kod.'),
    ('Vad är syftet med programmeringsmönster?', 'Syftet är att påskynda utvecklingsprocessen, adressera problem som kan bli synliga i implementationsfasen, förhindra stora problem och förbättra kodens läsbarhet.'),
    ('Ge exempel på två olika programmeringsmönster och dess användningsområden.', 'Observer Pattern - Meddelar flera objekt om ändringar i ett annat objekt. Används vid händelsehantering. Singleton Pattern - Begränsar en klass till endast en instans. Används vid loggning eller inställningshantering.'),

    ('Vad är klasser och arv?', 'Bas Klass - är en klass vars medlemmar ska ärvas. Avled Klass - är en specialisering av bas-klassen som ärver alla medlemmar i bas-klassen. Klassmedlem - fält, egenskaper, metoder. Observera att en härledd klass kan bara ha en bas-klass.'),
    ('Varför används klasser och arv i C#?', 'Det tillåter en programmerare att skapa en annan klass baserad på den befintliga klassen och specificera ny implementering som håller samma beteende som definierat av metoderna i bas-klassen. Vi använder arv när vi vill återanvända kod och utvidga den ursprungliga applikationen via publika klasser.'),
    ('Varför använder vi public class i C#?', 'Public class, som namnet antyder, är avsedd att vara tillgänglig över hela projektet. Detta innebär att all arv från klassen kommer att ge åtkomst till alla dess medlemmar, såsom fält, metoder, attribut.'),
    ('Vad använder vi private fields till i C#?', 'Användning av privata fält förhindrar direkt åtkomst till det fältet. Avsikten är att skydda fältet och göra det tillgängligt endast inom den innehållande klassen. För att få åtkomst bör fältet ha en egenskap som ger indirekt åtkomst av externa enheter. Denna teknik kallas inkapsling.'),
    ('Vad används informationsflödesdiagram till?', 'Är ett diagram som visar proceduren och interaktionsbeteendet samt datautbytet mellan system eller funktionaliteter.'),
    ('Varför används informationsflödesdiagram?', 'Vi använder informationsflödesdiagram för att visualisera processflödet för ett visst system och undersöka olika scenarier som systemet som ska utvecklas bör hantera.'),
    ('Vad är huvudsyftet med ett informationsflödesdiagram?', 'Det främsta syftet är att förstå och gripa konceptet och logiken för systemet med avseende på dataflöde (input-process-output), användarinteraktion och gränser.')

   